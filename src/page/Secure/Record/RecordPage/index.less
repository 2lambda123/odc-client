@import (reference) '~@/func.less';
.name {
  color: @odc-text-color-dark;
}
.ellipsis {
  .odc-text-ellipsis();
}
.actions {
  min-width: 100px;
}
.actionBtn {
  color: #1890ff;
  font-size: 12px;
  cursor: pointer;
}

.disabled {
  color: #00000040;
  cursor: not-allowed;
  &:hover {
    color: #00000040;
  }
}

.title {
  white-space: pre;
}

.tableSearch {
  padding: 12px;
  .footer {
    display: flex;
    :global {
      .ant-space-item {
        flex: 1;
      }
    }
  }
}

.timeSetter {
  width: 100%;
  .rangePicker {
    padding-left: 25px;
  }
}

.clear {
  width: 100%;
}

.description {
  color: @odc-text-color-secondary-dark2;
}

.connection {
  :global {
    .ant-descriptions {
      padding: 16px;
      background: var(--background-primary-color);
    }
    .ant-divider-vertical {
      margin: 0;
    }
  }
}

.eventFilter {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 240px;
  height: 280px;
  padding: 16px;
  :global {
    .ant-tree-switcher:not(.ant-tree-switcher-noop) {
      width: unset;
      padding-right: 6px;
    }
    .ant-btn-link {
      padding-left: 0;
    }
    .ant-tree-node-content-wrapper {
      &:hover,
      &.ant-tree-node-selected {
        background: none;
      }
    }
  }
  .footer {
    display: flex;
    justify-content: space-between;
  }
}

.jsonView {
  padding: 16px;
  white-space: pre-wrap;
  background: var(--background-primary-color);
}

.blockDesc {
  color: red;
  :global {
    .ant-descriptions-item-content,
    .ant-space {
      width: 100%;
    }
    .ant-descriptions-item-content {
      display: block;
    }
  }
}
